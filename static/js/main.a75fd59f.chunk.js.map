{"version":3,"sources":["logo.svg","reportWebVitals.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","console","log","App","state","logs","initReactGA","ReactGA","initialize","debug","pageview","this","Hook","window","setState","Decode","className","src","logo","alt","href","style","backgroundColor","variant","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAAe,MAA0B,iC,gBCY1BA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCEdD,EAAgBS,QAAQC,K,IAyCTC,E,4MAvCbC,MAAQ,CACNC,KAAM,I,EAGRC,YAAc,WACZC,IAAQC,WAAW,iBACnB,CACEC,OAAO,IAETF,IAAQG,SAAS,uB,uDAGnB,WAAoB,IAAD,OACjBC,KAAKL,cACLM,eAAKC,OAAOZ,SAAS,SAAAC,GACnB,EAAKY,UAAS,gBAAGT,EAAH,EAAGA,KAAH,MAAe,CAAEA,KAAK,GAAD,mBAAMA,GAAN,CAAYU,iBAAOb,YAExDD,QAAQC,IAAR,mBACAK,IAAQG,SAAS,eACjBlB,M,oBAGF,WACE,OACE,sBAAKwB,UAAU,gBAAf,UACE,qBAAKA,UAAU,WAAWC,IAAKC,EAAMC,IAAI,SACzC,sDACA,iFACA,sFACA,4BAAG,mBAAGC,KAAK,yCAAR,uCACH,4BAAG,mBAAGA,KAAK,6CAAR,2CACH,qBAAKJ,UAAU,cAAcK,MAAO,CAAEC,gBAAiB,WAAvD,SACE,cAAC,UAAD,CAASjB,KAAMM,KAAKP,MAAMC,KAAMkB,QAAQ,kB,GAjChCC,aCJlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BrC,M","file":"static/js/main.a75fd59f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport ReactGA from 'react-ga';\r\nimport React, { Component } from \"react\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Hook, Console, Decode } from 'console-feed'\r\n//ReactGA.initialize('UA-215064440-1');\r\n//ReactGA.pageview('test-init-pageview');\r\n\r\nreportWebVitals(console.log)\r\nclass App extends Component {\r\n  state = {\r\n    logs: []\r\n  }\r\n\r\n  initReactGA = () => {\r\n    ReactGA.initialize('UA-215064440-1',\r\n    {\r\n      debug: true,\r\n    });\r\n    ReactGA.pageview('test-init-pageview');\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.initReactGA();\r\n    Hook(window.console, log => {\r\n      this.setState(({ logs }) => ({ logs: [...logs, Decode(log)] }))\r\n    })\r\n    console.log(`Hello world!!!!`)\r\n    ReactGA.pageview('/I/am/alive');\r\n    reportWebVitals();\r\n  }\r\n\r\n  render() {\r\n    return (            \r\n      <div className=\"App container\">\r\n        <img className=\"App-logo\" src={logo} alt=\"logo\" />\r\n        <h1>Google Analytics Toy</h1>\r\n        <p>Basic Toy to try out Google Analytics with React</p>\r\n        <p>Based on mostly boiler code from a number of sources:</p>\r\n        <p><a href=\"https://www.npmjs.com/package/react-ga\">react-ga NodeJS Library</a></p>\r\n        <p><a href=\"https://www.npmjs.com/package/console-feed\">console-feed NodeJS library</a></p>\r\n        <div className=\"App-console\" style={{ backgroundColor: '#242424' }}>\r\n          <Console logs={this.state.logs} variant=\"dark\" />\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}